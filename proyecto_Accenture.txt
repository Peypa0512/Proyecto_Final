pom.xml

<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>8.0.32</version>
	</dependency>
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>6.4.1.Final</version>
	</dependency>

coche
-----

import java.util.Date;

import jakarta.persistence.*;

@Entity
@Table(name = "coche")
public class Coche {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "coche_id")
    private Short cocheId;

    @Column(name = "matricula", nullable = false)
    private String matricula;

    @Column(name = "fecha_matriculacion", nullable = false, columnDefinition = "TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")
    @Temporal(TemporalType.TIMESTAMP)
    private java.util.Date fechMatriculacion=new Date();
    
    @Column(name = "precio", nullable = false)
    private double precio;

    @ManyToOne
	@JoinColumn(name = "marca_id", nullable = false)
	private Marca marca;
    
    @ManyToOne
	@JoinColumn(name = "modelo_id", nullable = false)
	private Modelo modelo;
    
    @ManyToOne
	@JoinColumn(name = "propietario_id", nullable = false)
	private Propietario propietario;
	;

    // Constructor, getters, and setters

    public Coche() {
    }
	public Coche(String matricula, Date fechMatriculacion, double precio) {
		super();
		this.matricula = matricula;
		this.fechMatriculacion = fechMatriculacion;
		this.precio = precio;
	}
	public Short getCocheId() {
		return cocheId;
	}
	public void setCocheId(Short cocheId) {
		this.cocheId = cocheId;
	}
	public String getMatricula() {
		return matricula;
	}
	public void setMatricula(String matricula) {
		this.matricula = matricula;
	}
	public java.util.Date getFechMatriculacion() {
		return fechMatriculacion;
	}
	public void setFechMatriculacion(java.util.Date fechMatriculacion) {
		this.fechMatriculacion = fechMatriculacion;
	}
	public double getPrecio() {
		return precio;
	}
	public void setPrecio(double precio) {
		this.precio = precio;
	}
	public Marca getMarca() {
		return marca;
	}
	public void setMarca(Marca marca) {
		this.marca = marca;
	}
	public Modelo getModelo() {
		return modelo;
	}
	public void setModelo(Modelo modelo) {
		this.modelo = modelo;
	}
	public Propietario getPropietario() {
		return propietario;
	}
	public void setPropietario(Propietario propietario) {
		this.propietario = propietario;
	}
	@Override
	public String toString() {
		return "Coche [cocheId=" + cocheId + ", matricula=" + matricula + ", fechMatriculacion=" + fechMatriculacion
				+ ", precio=" + precio + ", marca=" + marca + ", modelo=" + modelo.getModelo() + "]";
	}
}


modelo
-------

import jakarta.persistence.*;
import java.util.List;


import com.psr.accenture.models.Modelo;

@Entity
@Table(name = "modelo")
public class Modelo {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "modelo_id")
	private int modeloId;

	@Column(name = "modelo")
	private String modelo;
	

	@ManyToOne
	@JoinColumn(name = "marca_id", nullable = false)
	private Marca marca;
	
	@OneToMany(mappedBy = "modelo", cascade = CascadeType.ALL)
	private List<Coche> coche;

	// Constructor, getters, and setters
	public Modelo() {
		super();
	}

	public Modelo(String modelo) {
		super();
		this.modelo = modelo;
		
	}

	public int getModeloId() {
		return modeloId;
	}

	public void setModeloId(int modeloId) {
		this.modeloId = modeloId;
	}

	public String getModelo() {
		return modelo;
	}

	public void setModelo(String modelo) {
		this.modelo = modelo;
	}

	public Marca getMarca() {
		return marca;
	}

	public void setMarca(Marca marca) {
		this.marca = marca;
	}

	@Override
	public String toString() {
		return "Modelo [modeloId=" + modeloId + ", modelo=" + modelo + ", marca=" + marca.getNombre() + "]";
	}

}

Marca
------


import jakarta.persistence.*;
import java.util.List;


import com.psr.accenture.models.Marca;

@Entity
@Table(name = "marca")
public class Marca {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "marca_id")
	private int marcaId;

	@Column(name = "nombre")
	private String nombre;

	

	@OneToMany(mappedBy = "marca", cascade = CascadeType.ALL)
	private List<Modelo> modelo;

	
	@OneToMany(mappedBy = "marca", cascade = CascadeType.ALL)
	private List<Coche> coche;
	

	// Constructor, getters, and setters
	public Marca() {
		super();
	}

	public Marca(String nombre) {
		super();
		this.nombre = nombre;
	
}

	public int getMarcaId() {
		return marcaId;
	}

	public void setMarcaId(int marcaId) {
		this.marcaId = marcaId;
	}

	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Override
	public String toString() {
		return "Marca [marcaId=" + marcaId + ", nombre=" + nombre + "]";
	}
}


Propietario
-----------

import jakarta.persistence.*;
import java.util.List;


import com.psr.accenture.models.Propietario;

@Entity
@Table(name = "propietario")
public class Propietario {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "propietario_id")
	private int propietarioId;

	@Column(name = "nombre")
	private String nombre;

	@Column(name = "dni")
	private String dni;
	
	@Column(name = "ciudad")
	private String ciudad;
	
	@Column(name = "telefono")
	private String telefono;

		
	@OneToMany(mappedBy = "propietario", cascade = CascadeType.ALL)
	private List<Coche> Coche;
	

	// Constructor, getters, and setters
	public Propietario() {
		super();
	}


	public int getPropietarioId() {
		return propietarioId;
	}


	public void setPropietarioId(int propietarioId) {
		this.propietarioId = propietarioId;
	}


	public String getNombre() {
		return nombre;
	}


	public void setNombre(String nombre) {
		this.nombre = nombre;
	}


	public String getDni() {
		return dni;
	}


	public void setDni(String dni) {
		this.dni = dni;
	}


	public String getCiudad() {
		return ciudad;
	}


	public void setCiudad(String ciudad) {
		this.ciudad = ciudad;
	}


	public String getTelefono() {
		return telefono;
	}


	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}





	@Override
	public String toString() {
		return "Propietario [propietarioId=" + propietarioId + ", nombre=" + nombre + ", dni=" + dni + ", ciudad="
				+ ciudad + ", telefono=" + telefono + "]";
	}


}

HibernateUtil.java
------------------

import java.util.Properties;

import org.hibernate.SessionFactory;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;
import org.hibernate.cfg.Environment;
import org.hibernate.service.ServiceRegistry;

import com.psr.accenture.models.*;


public class HibernateUtil {
	  private static  SessionFactory sessionFactory;
	     public static SessionFactory getSessionFactory() {
	    	if (sessionFactory == null) {
				try {
					Configuration configuration = new Configuration();

					// Hibernate settings equivalent to hibernate.cfg.xml's properties
					Properties settings = new Properties();
					settings.put(Environment.DRIVER, "com.mysql.cj.jdbc.Driver");
					settings.put(Environment.URL, "jdbc:mysql://localhost:3306/proyecto_accenture");
					settings.put(Environment.USER, "root");
					settings.put(Environment.PASS, "");
					settings.put(Environment.DIALECT, "org.hibernate.dialect.MySQLDialect");

					settings.put(Environment.SHOW_SQL, "true");

					settings.put(Environment.CURRENT_SESSION_CONTEXT_CLASS, "thread");


					configuration.setProperties(settings);
					
					configuration.addAnnotatedClass(Marca.class);
					configuration.addAnnotatedClass(Modelo.class);
					configuration.addAnnotatedClass(Coche.class);
					configuration.addAnnotatedClass(Propietario.class);

					ServiceRegistry serviceRegistry = new StandardServiceRegistryBuilder()
							.applySettings(configuration.getProperties()).build();
					
					sessionFactory = configuration.buildSessionFactory(serviceRegistry);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			return sessionFactory;
	    }
	 
	    public static void shutdown() {
	        // Close caches and connection pools
	        getSessionFactory().close();
	    }
}
